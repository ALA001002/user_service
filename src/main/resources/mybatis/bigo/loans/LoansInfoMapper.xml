<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bigo.project.bigo.loans.mapper.LoansInfoMapper">
    
    <resultMap type="LoansInfo" id="LoansInfoResult">
        <result property="id"    column="id"    />
        <result property="uid"    column="uid"    />
        <result property="amount"    column="amount"    />
        <result property="interestAmount"    column="interest_amount"    />
        <result property="totalAmount"    column="total_amount"    />
        <result property="repaidAmount"    column="repaid_amount"    />
        <result property="rechargeAmount"    column="recharge_amount"    />
        <result property="loansNumber"    column="loans_number"    />
        <result property="minRepaymentRate"    column="min_repayment_rate"    />
        <result property="status"    column="status"    />
        <result property="paybackTime"    column="payback_time"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectLoansInfoVo">
        select id, uid, amount, interest_amount, total_amount, repaid_amount,recharge_amount, loans_number,min_repayment_rate, status, payback_time, create_time, update_time from bg_loans_info
    </sql>

    <select id="selectLoansInfoByUid" parameterType="Long" resultType="LoansInfo">
        SELECT
            id,
            uid,
            amount,
            interest_amount as interestAmount,
            total_amount as totalAmount,
            repaid_amount as repaidAmount,
            recharge_amount as rechargeAmount,
            loans_number as loansNumber,
            min_repayment_rate as minRepaymentRate,
            status,
            payback_time as paybackTime,
            create_time as createTime,
            update_time as updateTime
        FROM
            bg_loans_info
        WHERE
            uid = #{uid} and status = 3 and payback_time &lt;= now() limit 1
    </select>

    <select id="selectLoansInfoList" parameterType="LoansInfo" resultMap="LoansInfoResult">
        <include refid="selectLoansInfoVo"/>
        <where>  
            <if test="uid != null "> and uid = #{uid}</if>
            <if test="amount != null "> and amount = #{amount}</if>
            <if test="interestAmount != null "> and interest_amount = #{interestAmount}</if>
            <if test="totalAmount != null "> and total_amount = #{totalAmount}</if>
            <if test="repaidAmount != null "> and repaid_amount = #{repaidAmount}</if>
            <if test="loansNumber != null "> and loans_number = #{loansNumber}</if>
            <if test="status != null "> and status = #{status}</if>
            <if test="paybackTime != null "> and payback_time &gt;= #{paybackTime}</if>
             <if test="statusList != null">
                 and status in
                 <foreach item="item" index="index" collection="statusList" open="(" separator="," close=")">
                     #{item}
                 </foreach>
             </if>
        </where>
        order by create_time desc
    </select>

    <select id="selectLoansInfoByWithdrawList" parameterType="LoansInfo" resultType="LoansInfo">
        select bli.*, (
        select IFNULL(sum(tw.money),0) from t_withdraw tw
        WHERE
        1=1
        AND tw.type = 4
        AND tw.check_status = 1
        AND tw.STATUS = 1
        AND tw.uid = bli.uid
        AND tw.coin = 'USDT'
        ) as totalRecharge,
        (
        select IFNULL(sum(tw.money),0) from t_withdraw tw
        WHERE
        1=1
        AND (tw.type = 1 or tw.type = 2)
        AND tw.check_status = 1
        AND tw.STATUS = 1
        AND tw.uid = bli.uid
        AND tw.coin = 'USDT_TRC20'
        ) as totalWithdraw from (select
        id,
        uid,
        amount,
        interest_amount as interestAmount,
        total_amount as totalAmount,
        repaid_amount as repaidAmount,
        recharge_amount as rechargeAmount,
        loans_number as loansNumber,
        min_repayment_rate as minRepaymentRate,
        status,
        payback_time as paybackTime,
        create_time as createTime,
        update_time as updateTime
        from
        bg_loans_info
        <where>
            <if test="uid != null "> and uid = #{uid}</if>
            <if test="amount != null "> and amount = #{amount}</if>
            <if test="interestAmount != null "> and interest_amount = #{interestAmount}</if>
            <if test="totalAmount != null "> and total_amount = #{totalAmount}</if>
            <if test="repaidAmount != null "> and repaid_amount = #{repaidAmount}</if>
            <if test="loansNumber != null "> and loans_number = #{loansNumber}</if>
            <if test="status != null "> and status = #{status}</if>
            <if test="paybackTime != null "> and payback_time &gt;= #{paybackTime}</if>
            <if test="statusList != null">
                and status in
                <foreach item="item" index="index" collection="statusList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        order by create_time desc) bli
    </select>

<select id="getCurrentLoans" parameterType="LoansInfo" resultType="LoansInfo">
    SELECT
        id,
        uid,
        amount,
        interest_amount as interestAmount,
        total_amount as totalAmount,
        repaid_amount as repaidAmount,
        loans_number as loansNumber,
        recharge_amount as rechargeAmount,
        min_repayment_rate as minRepaymentRate,
        status,
        payback_time as paybackTime,
        create_time as createTime,
        update_time as updateTime
    FROM
        bg_loans_info
    <where>
        <if test="uid != null"> and uid = #{uid} </if>
          <if test="status != null"> and status = #{status}</if>
    </where>
    order by create_time desc limit 1
</select>

    <select id="selectLoansInfoById" parameterType="Long" resultMap="LoansInfoResult">
        <include refid="selectLoansInfoVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertLoansInfo" parameterType="LoansInfo">
        insert into bg_loans_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="uid != null">uid,</if>
            <if test="amount != null">amount,</if>
            <if test="interestAmount != null">interest_amount,</if>
            <if test="totalAmount != null">total_amount,</if>
            <if test="repaidAmount != null">repaid_amount,</if>
            <if test="loansNumber != null">loans_number,</if>
            <if test="minRepaymentRate != null">min_repayment_rate,</if>
            <if test="status != null">status,</if>
            <if test="paybackTime != null">payback_time,</if>
            <if test="createTime != null">create_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="uid != null">#{uid},</if>
            <if test="amount != null">#{amount},</if>
            <if test="interestAmount != null">#{interestAmount},</if>
            <if test="totalAmount != null">#{totalAmount},</if>
            <if test="repaidAmount != null">#{repaidAmount},</if>
            <if test="loansNumber != null">#{loansNumber},</if>
            <if test="minRepaymentRate != null">#{minRepaymentRate},</if>
            <if test="status != null">#{status},</if>
            <if test="paybackTime != null">#{paybackTime},</if>
            <if test="createTime != null">#{createTime},</if>
         </trim>
    </insert>

    <update id="updateLoansInfo" parameterType="LoansInfo">
        update bg_loans_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="uid != null">uid = #{uid},</if>
            <if test="amount != null">amount = #{amount},</if>
            <if test="interestAmount != null">interest_amount = #{interestAmount},</if>
            <if test="totalAmount != null">total_amount = #{totalAmount},</if>
            <if test="repaidAmount != null">repaid_amount = #{repaidAmount},</if>
            <if test="loansNumber != null">loans_number = #{loansNumber},</if>
            <if test="minRepaymentRate != null">min_repayment_rate = #{minRepaymentRate},</if>
            <if test="status != null">status = #{status},</if>
            <if test="paybackTime != null">payback_time = #{paybackTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="operatorId != null">operator_id = #{operatorId},</if>
            <if test="checkTime != null">check_time = #{checkTime},</if>
        </trim>
        where id = #{id}
    </update>

    <update id="cumulativeBalance" parameterType="LoansInfo">
        update bg_loans_info set repaid_amount =  #{repaidAmount}, update_time = #{updateTime} where id = #{id} and repaid_amount =  #{oldRepaidAmount}
    </update>

    <update id="cumulativeRechargeAmount" parameterType="LoansInfo">
        update bg_loans_info set recharge_amount =  #{rechargeAmount}, update_time = #{updateTime} where id = #{id} and recharge_amount =  #{oldRechargeAmount}
    </update>


    <delete id="deleteLoansInfoById" parameterType="Long">
        delete from bg_loans_info where id = #{id}
    </delete>

    <delete id="deleteLoansInfoByIds" parameterType="String">
        delete from bg_loans_info where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>