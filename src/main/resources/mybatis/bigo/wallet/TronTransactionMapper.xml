<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bigo.project.bigo.wallet.mapper.TronTransactionMapper">
    
    <resultMap type="TronTransaction" id="TronTransactionResult">
        <result property="id"    column="id"    />
        <result property="amount"    column="amount"    />
        <result property="blockNum"    column="block_num"    />
        <result property="collectErrors"    column="collect_errors"    />
        <result property="collectTime"    column="collect_time"    />
        <result property="collectTxId"    column="collect_tx_id"    />
        <result property="confirmBlock"    column="confirm_block"    />
        <result property="confirmTime"    column="confirm_time"    />
        <result property="contractAddress"    column="contract_address"    />
        <result property="createdAt"    column="created_at"    />
        <result property="errors"    column="errors"    />
        <result property="feeTxId"    column="fee_tx_id"    />
        <result property="fromAddress"    column="from_address"    />
        <result property="originAmount"    column="origin_amount"    />
        <result property="parentTxId"    column="parent_tx_id"    />
        <result property="score"    column="score"    />
        <result property="status"    column="status"    />
        <result property="symbol"    column="symbol"    />
        <result property="toAddress"    column="to_address"    />
        <result property="txid"    column="txid"    />
        <result property="type"    column="type"    />
        <result property="updatedAt"    column="updated_at"    />
    </resultMap>

    <sql id="selectTronTransactionVo">
        select id, amount, block_num, collect_errors, collect_time, collect_tx_id, confirm_block, confirm_time, contract_address, created_at, errors, fee_tx_id, from_address, origin_amount, parent_tx_id, score, status, symbol, to_address, txid, type, updated_at from tron_transaction
    </sql>

    <select id="findFirstByTxid" parameterType="java.lang.String" resultType="TronTransaction">
        SELECT
            tt.id,
            tt.amount,
            tt.block_num as blockNum,
            tt.collect_errors as collectErrors,
            tt.collect_time as collectTime,
            tt.collect_tx_id as collectTxId,
            tt.confirm_block as confirmBlock,
            tt.confirm_time as confirmTime,
            tt.contract_address as contractAddress,
            tt.created_at as createdAt,
            tt.fee_tx_id as feeTxId,
            tt.from_address as fromAddress,
            tt.origin_amount as originAmount,
            tt.parent_tx_id as parentTxId,
            tt.score,
            tt.status,
            tt.symbol,
            tt.to_address as toAddress,
            tt.txid,
            tt.type
        FROM tron_transaction tt
        where tt.txid = #{txId}
    </select>

    <select id="listTronTransaction" parameterType="TronTransaction" resultType="TronTransaction">
        SELECT
            tt.id,
            wa.uid,
            IFNULL(bu.phone, bu.email) as username,
            bu.parent_uid as parentUid,
            bu.top_uid as topUid,
            tt.amount,
            tt.block_num as blockNum,
            tt.collect_errors as collectErrors,
            tt.collect_time as collectTime,
            tt.collect_tx_id as collectTxId,
            tt.confirm_block as confirmBlock,
            tt.confirm_time as confirmTime,
            tt.contract_address as contractAddress,
            tt.created_at as createdAt,
            tt.fee_tx_id as feeTxId,
            tt.from_address as fromAddress,
            tt.origin_amount as originAmount,
            tt.parent_tx_id as parentTxId,
            tt.score,
            tt.status,
            tt.symbol,
            tt.to_address as toAddress,
            tt.txid,
            tt.type
        FROM tron_transaction tt
        left join wallet_address wa on wa.address = tt.to_address and wa.coin = 'USDT_TRC20'
        left join bg_user bu on wa.uid = bu.uid
        <where>
            <if test="lowerUids != null">
                and wa.uid in (${lowerUids})
            </if>
            <if test="uid != null"> and wa.uid = #{uid} </if>
            <if test="collectTxId != null  and collectTxId != ''"> and tt.collect_tx_id = #{collectTxId}</if>
            <if test="confirmBlock != null "> and tt.confirm_block = #{confirmBlock}</if>
            <if test="confirmTime != null "> and tt.confirm_time = #{confirmTime}</if>
            <if test="contractAddress != null  and contractAddress != ''"> and tt.contract_address = #{contractAddress}</if>
            <if test="createdAt != null "> and tt.created_at = #{createdAt}</if>
            <if test="feeTxId != null  and feeTxId != ''"> and tt.fee_tx_id = #{feeTxId}</if>
            <if test="fromAddress != null  and fromAddress != ''"> and tt.from_address = #{fromAddress}</if>
            <if test="originAmount != null "> and tt.origin_amount = #{originAmount}</if>
            <if test="parentTxId != null  and parentTxId != ''"> and tt.parent_tx_id = #{parentTxId}</if>
            <if test="score != null "> and tt.score = #{score}</if>
            <if test="status != null "> and tt.status = #{status}</if>
            <if test="symbol != null  and symbol != ''"> and tt.symbol = #{symbol}</if>
            <if test="toAddress != null  and toAddress != ''"> and tt.to_address = #{toAddress}</if>
            <if test="txid != null  and txid != ''"> and tt.txid = #{txid}</if>
            <if test="type != null "> and tt.type = #{type}</if>
        </where>
        ORDER BY tt.created_at DESC
    </select>

    <select id="selectTronTransactionList" parameterType="TronTransaction" resultMap="TronTransactionResult">
        <include refid="selectTronTransactionVo"/>
        <where>  
            <if test="amount != null "> and amount = #{amount}</if>
            <if test="blockNum != null "> and block_num = #{blockNum}</if>
            <if test="collectErrors != null  and collectErrors != ''"> and collect_errors = #{collectErrors}</if>
            <if test="collectTime != null "> and collect_time = #{collectTime}</if>
            <if test="collectTxId != null  and collectTxId != ''"> and collect_tx_id = #{collectTxId}</if>
            <if test="confirmBlock != null "> and confirm_block = #{confirmBlock}</if>
            <if test="confirmTime != null "> and confirm_time = #{confirmTime}</if>
            <if test="contractAddress != null  and contractAddress != ''"> and contract_address = #{contractAddress}</if>
            <if test="createdAt != null "> and created_at = #{createdAt}</if>
            <if test="errors != null  and errors != ''"> and errors = #{errors}</if>
            <if test="feeTxId != null  and feeTxId != ''"> and fee_tx_id = #{feeTxId}</if>
            <if test="fromAddress != null  and fromAddress != ''"> and from_address = #{fromAddress}</if>
            <if test="originAmount != null "> and origin_amount = #{originAmount}</if>
            <if test="parentTxId != null  and parentTxId != ''"> and parent_tx_id = #{parentTxId}</if>
            <if test="score != null "> and score = #{score}</if>
            <if test="status != null "> and status = #{status}</if>
            <if test="symbol != null  and symbol != ''"> and symbol = #{symbol}</if>
            <if test="toAddress != null  and toAddress != ''"> and to_address = #{toAddress}</if>
            <if test="txid != null  and txid != ''"> and txid = #{txid}</if>
            <if test="type != null "> and type = #{type}</if>
            <if test="updatedAt != null "> and updated_at = #{updatedAt}</if>
        </where>
    </select>
    
    <select id="selectTronTransactionById" parameterType="Long" resultMap="TronTransactionResult">
        <include refid="selectTronTransactionVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertTronTransaction" parameterType="TronTransaction" useGeneratedKeys="true" keyProperty="id">
        insert into tron_transaction
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="amount != null">amount,</if>
            <if test="blockNum != null">block_num,</if>
            <if test="collectErrors != null">collect_errors,</if>
            <if test="collectTime != null">collect_time,</if>
            <if test="collectTxId != null">collect_tx_id,</if>
            <if test="confirmBlock != null">confirm_block,</if>
            <if test="confirmTime != null">confirm_time,</if>
            <if test="contractAddress != null">contract_address,</if>
            <if test="createdAt != null">created_at,</if>
            <if test="errors != null">errors,</if>
            <if test="feeTxId != null">fee_tx_id,</if>
            <if test="fromAddress != null">from_address,</if>
            <if test="originAmount != null">origin_amount,</if>
            <if test="parentTxId != null">parent_tx_id,</if>
            <if test="score != null">score,</if>
            <if test="status != null">status,</if>
            <if test="symbol != null">symbol,</if>
            <if test="toAddress != null">to_address,</if>
            <if test="txid != null">txid,</if>
            <if test="type != null">type,</if>
            <if test="updatedAt != null">updated_at,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="amount != null">#{amount},</if>
            <if test="blockNum != null">#{blockNum},</if>
            <if test="collectErrors != null">#{collectErrors},</if>
            <if test="collectTime != null">#{collectTime},</if>
            <if test="collectTxId != null">#{collectTxId},</if>
            <if test="confirmBlock != null">#{confirmBlock},</if>
            <if test="confirmTime != null">#{confirmTime},</if>
            <if test="contractAddress != null">#{contractAddress},</if>
            <if test="createdAt != null">#{createdAt},</if>
            <if test="errors != null">#{errors},</if>
            <if test="feeTxId != null">#{feeTxId},</if>
            <if test="fromAddress != null">#{fromAddress},</if>
            <if test="originAmount != null">#{originAmount},</if>
            <if test="parentTxId != null">#{parentTxId},</if>
            <if test="score != null">#{score},</if>
            <if test="status != null">#{status},</if>
            <if test="symbol != null">#{symbol},</if>
            <if test="toAddress != null">#{toAddress},</if>
            <if test="txid != null">#{txid},</if>
            <if test="type != null">#{type},</if>
            <if test="updatedAt != null">#{updatedAt},</if>
         </trim>
    </insert>

    <update id="updateTronTransaction" parameterType="TronTransaction">
        update tron_transaction
        <trim prefix="SET" suffixOverrides=",">
            <if test="amount != null">amount = #{amount},</if>
            <if test="blockNum != null">block_num = #{blockNum},</if>
            <if test="collectErrors != null">collect_errors = #{collectErrors},</if>
            <if test="collectTime != null">collect_time = #{collectTime},</if>
            <if test="collectTxId != null">collect_tx_id = #{collectTxId},</if>
            <if test="confirmBlock != null">confirm_block = #{confirmBlock},</if>
            <if test="confirmTime != null">confirm_time = #{confirmTime},</if>
            <if test="contractAddress != null">contract_address = #{contractAddress},</if>
            <if test="createdAt != null">created_at = #{createdAt},</if>
            <if test="errors != null">errors = #{errors},</if>
            <if test="feeTxId != null">fee_tx_id = #{feeTxId},</if>
            <if test="fromAddress != null">from_address = #{fromAddress},</if>
            <if test="originAmount != null">origin_amount = #{originAmount},</if>
            <if test="parentTxId != null">parent_tx_id = #{parentTxId},</if>
            <if test="score != null">score = #{score},</if>
            <if test="status != null">status = #{status},</if>
            <if test="symbol != null">symbol = #{symbol},</if>
            <if test="toAddress != null">to_address = #{toAddress},</if>
            <if test="txid != null">txid = #{txid},</if>
            <if test="type != null">type = #{type},</if>
            <if test="updatedAt != null">updated_at = #{updatedAt},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTronTransactionById" parameterType="Long">
        delete from tron_transaction where id = #{id}
    </delete>

    <delete id="deleteTronTransactionByIds" parameterType="String">
        delete from tron_transaction where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="updateScore" parameterType="TronTransaction">
        update tron_transaction set score = #{score} where txid = #{txid}
    </update>
    
</mapper>