<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bigo.project.bigo.pay.mapper.PayPassageMapper">
    
    <resultMap type="PayPassage" id="PayPassageResult">
        <result property="id"    column="id"    />
        <result property="passageName"    column="passage_name"    />
        <result property="ifTypeCode"    column="If_type_code"    />
        <result property="status"    column="status"    />
        <result property="maxEveryAmount"    column="max_every_amount"    />
        <result property="minEveryAmount"    column="min_every_amount"    />
        <result property="param"    column="param"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectPayPassageVo">
        select id, passage_name, If_type_code, status, max_every_amount, min_every_amount, param, create_time, update_time from bg_pay_passage
    </sql>

    <select id="selectPayPassageList" parameterType="PayPassage" resultMap="PayPassageResult">
        <include refid="selectPayPassageVo"/>
        <where>  
            <if test="passageName != null  and passageName != ''"> and passage_name like concat('%', #{passageName}, '%')</if>
            <if test="ifTypeCode != null  and ifTypeCode != ''"> and If_type_code = #{ifTypeCode}</if>
            <if test="status != null "> and status = #{status}</if>
            <if test="maxEveryAmount != null "> and max_every_amount = #{maxEveryAmount}</if>
            <if test="minEveryAmount != null "> and min_every_amount = #{minEveryAmount}</if>
            <if test="param != null  and param != ''"> and param = #{param}</if>
        </where>
    </select>
    
    <select id="selectPayPassageById" parameterType="Long" resultMap="PayPassageResult">
        <include refid="selectPayPassageVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertPayPassage" parameterType="PayPassage" useGeneratedKeys="true" keyProperty="id">
        insert into bg_pay_passage
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="passageName != null">passage_name,</if>
            <if test="ifTypeCode != null">If_type_code,</if>
            <if test="status != null">status,</if>
            <if test="maxEveryAmount != null">max_every_amount,</if>
            <if test="minEveryAmount != null">min_every_amount,</if>
            <if test="param != null">param,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="passageName != null">#{passageName},</if>
            <if test="ifTypeCode != null">#{ifTypeCode},</if>
            <if test="status != null">#{status},</if>
            <if test="maxEveryAmount != null">#{maxEveryAmount},</if>
            <if test="minEveryAmount != null">#{minEveryAmount},</if>
            <if test="param != null">#{param},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updatePayPassage" parameterType="PayPassage">
        update bg_pay_passage
        <trim prefix="SET" suffixOverrides=",">
            <if test="passageName != null">passage_name = #{passageName},</if>
            <if test="ifTypeCode != null">If_type_code = #{ifTypeCode},</if>
            <if test="status != null">status = #{status},</if>
            <if test="maxEveryAmount != null">max_every_amount = #{maxEveryAmount},</if>
            <if test="minEveryAmount != null">min_every_amount = #{minEveryAmount},</if>
            <if test="param != null">param = #{param},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deletePayPassageById" parameterType="Long">
        delete from bg_pay_passage where id = #{id}
    </delete>

    <delete id="deletePayPassageByIds" parameterType="String">
        delete from bg_pay_passage where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>